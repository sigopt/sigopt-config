version: "2.1"

orbs:
  node: circleci/node@5.1.0

commands:
  install-trivy:
    steps:
      - run: curl -fSsLo trivy.deb https://github.com/aquasecurity/trivy/releases/download/v0.38.3/trivy_0.38.3_Linux-64bit.deb && sudo dpkg -i trivy.deb && rm trivy.deb
  eslint:
    steps:
      - checkout
      - run: pip install pre-commit
      - node/install:
          install-yarn: false
          node-version: "18.14.0"
      - run: npm install
      - run: pre-commit run eslint --all-files
  pylint:
    steps:
      - checkout
      - run: sudo pip install --upgrade pip setuptools
      - run: pip install . -r requirements-dev.txt
      - run: pre-commit run pylint --all-files
  combined_test:
    steps:
      - node/install:
          install-yarn: false
          node-version: "18.14.0"
      - checkout
      - run: npm install
      - run: sudo pip install --upgrade pip setuptools
      - run: pip install . -r requirements-dev.txt
      - run: pytest test/config_test.py --junitxml=junit-results.xml
      - store_test_results:
          path: junit-results.xml
  python_test:
    steps:
      - checkout
      - run: sudo pip install --upgrade pip setuptools
      - run: pip install . -r requirements-dev.txt
      - run: PYTHONPATH=src/python pytest ./test/python --junitxml=junit-results.xml
      - store_test_results:
          path: junit-results.xml
  node_test:
    steps:
      - checkout
      - run: npm install
      - run: JEST_JUNIT_OUTPUT=junit-results.xml npx jest --reporters=default --reporters=jest-junit --runInBand --ci
      - store_test_results:
          path: junit-results.xml

jobs:
  eslint:
    docker:
      - image: circleci/python:3.10
    steps:
      - eslint
  pylint:
    docker:
      - image: circleci/python:3.10
    steps:
      - pylint
  combined_test:
    docker:
      - image: circleci/python:3.10
    steps:
      - combined_test
  python_test:
    docker:
      - image: circleci/python:3.10
    steps:
      - python_test
  node_test:
    docker:
      - image: cimg/node:18.14.0
    steps:
      - node_test
  trivy-scan-project:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - install-trivy
      - run: mkdir -p artifacts/trivy && trivy fs . --debug
      - store_artifacts:
          path: artifacts/trivy/

workflows:
  main:
    jobs:
      - combined_test
      - node_test
      - eslint
      - pylint
      - python_test
      - trivy-scan-project
